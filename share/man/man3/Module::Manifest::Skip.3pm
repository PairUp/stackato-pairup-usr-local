.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Module::Manifest::Skip 3"
.TH Module::Manifest::Skip 3 "2011-10-08" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Module::Manifest::Skip \- MANIFEST.SKIP Manangement for Modules
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
From the command line:
.PP
.Vb 1
\&    > perl \-MModule::Manifest::Skip=create
.Ve
.PP
From Perl:
.PP
.Vb 2
\&    use Module::Manifest::Skip;
\&    use IO::All;
\&    
\&    my $mms = Module::Manifest::Skip\->new;
\&    # optional add and removes:
\&    $mms\->add(\*(Aq^foo\-bar$\*(Aq);
\&    $mms\->remove(\*(Aq^foo$\*(Aq);
\&    $mms\->remove(qr/\eQ\ebfoo\eb/);
\&    io(\*(AqMANIFEST.SKIP\*(Aq)\->print($mms\->text);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fB\s-1NOTE:\s0\fR This module is mostly intended for module packaging frameworks to
share a common, up-to-date \f(CW\*(C`MANIFEST.SKIP\*(C'\fR base. For example,
Module::Install::ManifestSkip, uses this module to get the actual \s-1SKIP\s0
content. However this module may be useful for any module author.
.PP
\&\s-1CPAN\s0 module authors use a \s-1MANIFEST\s0.SKIP file to exclude certain well known
files from getting put into a generated \s-1MANIFEST\s0 file, which would cause them
to go into the final distribution package.
.PP
The packaging tools try to automatically skip things for you, but if you add
one of your own entries, you have to add all the common ones yourself. This
module attempts to make all of this boring process as simple and reliable as
possible.
.PP
Module::Manifest::Skip can create or update a \s-1MANIFEST\s0.SKIP file for you. You
can add your own entries, and it will leave them alone. You can even tell it
to \fBnot\fR skip certain entries that it normally skips, although this is rarely
needed.
.SH "USAGE"
.IX Header "USAGE"
Usually this module is called by other packaging modules. If you want this to
be used by Module::Install, then you would put this:
.PP
.Vb 1
\&    manifest_skip \*(Aqclean\*(Aq;
.Ve
.PP
in your \fIMakefile.PL\fR, and everything would be taken care of for you.
.PP
If you want to simply create a \fI\s-1MANIFEST\s0.SKIP\fR file from the command line,
this handy syntax exists:
.PP
.Vb 1
\&    > perl \-MModule::Manifest::Skip=create
.Ve
.SH "BEHAVIOR"
.IX Header "BEHAVIOR"
This module ships with a share file called \fIshare/MANIFEST.SKIP\fR. This is the
basis for all new \s-1MANIFEST\s0.SKIP files. This module will look for an already
existing \fI\s-1MANIFEST\s0.SKIP\fR file and take all the text before the first blank
line, and prepend it to the start of a new \s-1SKIP\s0 file. This allows you to put
your own personal section at the top, that will not be overwritten later.
.PP
It will then look for lines beginning with a dash followed by a space. Like
this:
.PP
.Vb 3
\&    \- \ebfoo\eb
\&    \- ^bar/
\&    \- ^baz$
.Ve
.PP
It will comment out each of these lines and any other lines that match the
text (after the '\- '). This allows you to override the default SKIPs.
.SH "AUTHOR"
.IX Header "AUTHOR"
Ingy do\*:t Net
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (c) 2011. Ingy do\*:t Net.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.PP
See http://www.perl.com/perl/misc/Artistic.html
